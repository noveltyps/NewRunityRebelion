package io.server.content.rewardsList;

import java.util.HashMap;
import java.util.Map;

/**
 * 
 * @author Adam_#6723
 * Enum which holds attributes for the reward interface.
 *
 */

public enum RewardsInterfaceData {

	CLUE_SCROLL_EASY(0, new int[] {12205, 12207, 12209, 12211, 12213, 12215, 12217, 12219, 12221, 12223, 12225, 12227, 12229, 12231, 12233, 12235, 12237, 12239, 12241, 12243, 2583, 2585, 
    2587, 2589, 2591, 2593, 2595, 2597, 3472, 3473, 2635, 2637, 12247, 2633, 2631, 12245, 7386, 7390, 7394, 7396, 7388, 7392, 12449, 12453, 12445, 12447, 12451, 12455, 10404, 10406,
    10424, 10426, 10412, 10414, 10432, 10434, 10408, 10410, 10428, 10430, 12375, 20217, 20211, 20214 }, "Clue Scroll Easy"),
	
	CLUE_SCROLL_MEDIUM(1, new int[] {12293, 12287, 12289, 12291, 12295, 12283, 12277, 12285, 12279, 12281, 2605, 3474, 
	2603, 2599, 2601, 2607, 2609, 2611, 2613, 3475, 2577, 12598, 10400, 10402, 10416, 10418, 12315, 12317, 
	12339, 12341, 12343, 12345, 12347, 12349, 10436, 10438, 10420, 10422, 12377, 10364, 
	10446, 12361, 12428, 12359, 20260, 20257, 20251, 20263, 20254 }, "Clue Scroll Medium"),
	
	CLUE_SCROLL_HARD(2, new int[] {12526, 12532, 12534, 12536, 12538, 12528, 12530, 3481, 3483, 3485, 3486, 
			3488, 12389, 12391, 7398, 7399, 7400, 2581, 2651, 10346, 10348, 10350, 10352, 10330, 10332, 10334, 10336, 10338,
			10340, 10342, 10344 }, "Clue Scroll Hard"),
	
	BRONZE(3, new int[] {2653, 2655, 3478, 2659, 2673, 2669, 2671, 3480, 
	2675, 2665, 2661, 2663, 3479, 2667, 12363, 12365, 12367, 12369, 12518, 12522, 12520, 
	452, 6739, 12797, 21028, 11771, 11773, 11772, 4151, 6585, 11840, 12881, 12883, 12873, 12879, 19484, 11212,
	12875, 19553, 11810, 11812, 11814, 11816, 13235, 13237, 13239, 13652, 11785, 12926, 11283, 
	10348, 10346, 10352, 12437, 12422, 12424, 12426, 20576, 20577, 10334, 10330, 10336, 10332, 10342, 
	20014, 20011, 10344, 13263, 13265, 13576, 19481, 21018, 21021, 21024, 11832, 11834, 11826, 11828, 
	11830 }, "Bronze Box"),
	
	SILVER(4, new int[] {990, 11907, 13265, 11791, 11824, 11832, 11834, 11826, 11828, 11830, 6739,
    12797, 21028, 11771, 11772, 11773, 4151, 6585, 11840, 12881, 12883, 12873, 12879, 11212, 12875, 
    11926, 12691, 12692, 13202, 11791, 19710, 20595, 20517, 21298, 21301, 21304, 20520, 
    7671, 11705, 11706, 20604, 13379, 13381, 13380, 13378, 13377, 21012, 10556, 10557, 10558, 10559, 
    1040, 1042, 1044, 1046, 1048, 11862, 11863, 12399, 13173, 1057, 11847, 1055, 1053, 13175 }, "Silver Box"),
	
	GOLD(5, new int[] {12926, 11283, 11771, 11772, 11773, 4151, 6585, 11840, 12881, 12883, 
	12873, 12875, 12879, 11785, 11926, 12691, 12692, 9923, 1050, 12890, 13652, 12888, 
	12891, 12821, 12825, 13343, 13175, 21000, 21003, 21006, 21015, 20997, 12817, 
	12821, 12825, 12819, 12823, 12827, 21021, 21018, 11847, 1048, 
	1040, 1042, 1044, 1046, 10556, 10557, 10558, 10559, 1057, 1053, 13235, 13237, 
	13239, 13652, 11785, 12926, 21079, 21034, 1038, 11862, 11863, 12399 }, "Gold Box"),
	
	ALL_VS_ONE(6, new int[] {12926, 11283, 11771, 11772, 11773, 19553, 11283, 11285, 11926, 
	12691, 12692, 13202, 11889, 11891, 19710, 13576, 1050, 12890, 13652, 12888, 12891, 
	12821, 12825, 13343, 21012, 10556, 10557, 10558, 10559, 11847, 1048, 1040, 1042, 1044, 1046, 21021, 21024, 21018, 1038, 11862, 11863, 12399, 1057, 1053, 13235, 13237, 13239, 13652, 11785, 12926, 21079, 21034, 1055, 13175, 
	21000, 21003, 21006, 21015, 20997, 12817, 12821, 12825, 12819, 12823, 12827 }, "All vs One Box"),
	
	ALL_VS_THREE(7, new int[] {11907, 13265, 11791, 11824, 11832, 11834, 11826, 11828, 
	11830, 11907, 13265, 11791, 11824, 11832, 11834, 11826, 11828, 11830, 11907, 
	13265, 11791, 11802, 11804, 11806, 10557, 21024, 21021, 21018, 11808, 21000, 21003, 21006, 21015, 20997, 12817, 12819, 12821, 12825, 12823, 12827, 21225, 13576, 9923, 1050, 12890, 13652, 12888, 
	12891, 12821, 12825, 13343, 10556, 10557, 10558, 10559, 13235, 13237, 13239, 13652, 21079, 21034, 1055 }, "All vs Three Box"),
	
	DOUBLE_THREAT(8, new int[] {11907, 13265, 11791, 11832, 11834, 11826, 11828, 11830, 11785, 
	11832, 11834, 10557, 21024, 21021, 21018, 21000, 21006, 21003, 21015, 20997, 
	12817, 12821, 12825, 12819, 12823, 12827, 20035, 20038, 20044, 20041, 20047, 
	13576, 13652, 12888, 12891, 12821, 12825, 13343, 10556, 10557, 10558, 10559, 13235, 13237, 13239, 
	21079, 21034, 13202 }, "Double Threat Box"),
	
	
    MEGA_BOXES(9, new int[] {1050, 12890, 13652, 12888, 12891, 12821, 12825, 13343, 
    1961, 10507, 13576, 12890, 13652, 12888, 12891, 4084, 21079, 21034, 1055, 13175, 21000, 
    21003, 21006, 21015, 20997, 12817, 12821, 12825, 12819, 12823, 12827, 11847, 10556, 
    10557, 10558, 10559, 13343, 21225, 1039, 1040, 1042, 1044, 13740, 21021, 21024, 21018 }, "Mega Boxes"),
    
    
	PET_MYSTERY_BOX(10, new int[] {13247, 20851, 12653, 12651, 12643, 12644, 12645, 12646, 12647, 12648, 12649, 
	12650, 12652, 12654, 12655, 13178, 13179, 13177, 13181, 11995, 12921, 12816, 13225, 13221, 13320, 13323, 20659, 20661, 20663, 20665, 13322, 9105, 8133, 8134, 7420, 21511, 21509, 
	13262, 4149, 7505, 21992, 21993, 21273, 20851, 13247, 20693, 21992, 7505, 4149, 13262, 21509, 21511, 7420 }, "Pet MBox"),
	
	;		
	private int index;
	private String RewardName;
	private int[] item;
	private int amount;
	
	public int getIndex() {
		return index;
	}

	public int[] getItemID() {
		return item;
	}

	public String getText() {
		return RewardName;
	}


	public int getAmount() {
		return amount;
	}


	RewardsInterfaceData(int index, int[] item, String RewardName) {
		this.index = (index);
		this.item = (item);
		this.RewardName = (RewardName);
	}
	
	static final Map<Integer, RewardsInterfaceData> byId = new HashMap<Integer, RewardsInterfaceData>();
	
	static {
		for (RewardsInterfaceData e : RewardsInterfaceData.values()) {
			if (byId.put(e.getIndex(), e) != null) {
				  throw new IllegalArgumentException("duplicate id: " + e.getIndex());
			}
		}
	}
	
	public static RewardsInterfaceData getById(int id) {
		if(byId.get(id) == null) {
			return byId.get(0);
		}
	    return byId.get(id);
	}

	
}
